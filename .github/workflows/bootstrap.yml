name: Bootstrap Pipeline
on: workflow_dispatch

defaults:
  run:
    shell: bash
    working-directory: bootstrap

env:
  BOOTSTRAP_PIPELINE_CONFIG: ${{ secrets.BOOTSTRAP_PIPELINE_CONFIG }}
  ONLY_TO_MASK_OUTPUT_TENANT_ID: ${{ secrets.SECRET_TENANT_ID }}
  ONLY_TO_MASK_OUTPUT_SUBSCRIPTION_ID: ${{ secrets.SECRET_SUBSCRIPTION_ID }}

jobs:
  # Notice that this stage already creates bootstrap SP + CICD RG + SA + KV, with SA containing container for Pulumi state, and KV containing key for Pulumi + secret with SP certificate authentication as contents.
  run_bootstrap_pipeline_pulumi_preview:
    name: Perform initial setup and preview Pulumi-managed changes
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 1
      - name: Perform initial setup and preview Pulumi-managed changes
        run: |
          set -e

          CURRENT_BRANCH="${GITHUB_REF#refs/heads/}"
          if [[ "${CURRENT_BRANCH}" != "main" ]]; then
            echo 'This action can only be run on main branch!' 1>&2
            exit 1
          fi
          
          npm ci
          docker run \
            --rm \
            --env BOOTSTRAP_PIPELINE_CONFIG \
            --entrypoint npm \
            "pulumi/pulumi-nodejs:$(cat package.json | jq -Mrc '.dependencies["@pulumi/pulumi"]')-debian" \
            run pulumi-azure-pipeline-bootstrap -- \
            'env:BOOTSTRAP_PIPELINE_CONFIG'

  run_bootstrap_pipeline_pulumi_up:
    name: Perform Pulumi-managed changes
    needs: [ run_bootstrap_pipeline_pulumi_preview ]
    runs-on: ubuntu-latest
    environment: cloud-deploy-bootstrap
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 1
      - name: Perform Pulumi-managed changes
        run: |
          set -e

          npm ci
          docker run \
            --rm \
            --env BOOTSTRAP_PIPELINE_CONFIG \
            --entrypoint npm \
            "pulumi/pulumi-nodejs:$(cat package.json | jq -Mrc '.dependencies["@pulumi/pulumi"]')-debian" \
            run pulumi-azure-pipeline-bootstrap -- \
            'env:BOOTSTRAP_PIPELINE_CONFIG' true